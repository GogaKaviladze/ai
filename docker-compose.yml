version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
      JWT_EXPIRES_MINUTES: ${JWT_EXPIRES_MINUTES}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/api/health']
      interval: 10s
      timeout: 5s
      retries: 5
  worker:
    build: ./backend
    command: python -m app.jobs.worker
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - backend
      - redis
  frontend:
    build: ./frontend
    command: npm run start
    environment:
      NEXT_PUBLIC_API_URL: /api
    depends_on:
      - backend
  caddy:
    image: caddy:2
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./infra/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - frontend
      - backend
volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
